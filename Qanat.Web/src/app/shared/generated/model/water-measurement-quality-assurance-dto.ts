/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class WaterMeasurementQualityAssuranceDto { 
    UsageLocationID?: number;
    UsageLocationName?: string | null;
    UsageLocationArea?: number;
    SummedValueInFeet?: number | null;
    SummedValueInAcreFeet?: number | null;
    PercentileBucket?: number | null;
    UsageLocationTypeID?: number;
    UsageLocationTypeName?: string | null;
    ParcelID?: number;
    ParcelNumber?: string | null;
    WaterAccountID?: number | null;
    WaterAccountNumberAndName?: string | null;
    ReportedValueInFeetByMonth?: { [key: string]: number; } | null;
    CoverCropStatus?: string | null;
    FallowStatus?: string | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface WaterMeasurementQualityAssuranceDtoForm { 
    UsageLocationID?: FormControl<number>;
    UsageLocationName?: FormControl<string>;
    UsageLocationArea?: FormControl<number>;
    SummedValueInFeet?: FormControl<number>;
    SummedValueInAcreFeet?: FormControl<number>;
    PercentileBucket?: FormControl<number>;
    UsageLocationTypeID?: FormControl<number>;
    UsageLocationTypeName?: FormControl<string>;
    ParcelID?: FormControl<number>;
    ParcelNumber?: FormControl<string>;
    WaterAccountID?: FormControl<number>;
    WaterAccountNumberAndName?: FormControl<string>;
    ReportedValueInFeetByMonth?: FormControl<{ [key: string]: number; }>;
    CoverCropStatus?: FormControl<string>;
    FallowStatus?: FormControl<string>;
}

export class WaterMeasurementQualityAssuranceDtoFormControls { 
    public static UsageLocationID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UsageLocationName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UsageLocationArea = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SummedValueInFeet = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SummedValueInAcreFeet = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static PercentileBucket = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UsageLocationTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UsageLocationTypeName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ParcelID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ParcelNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccountID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccountNumberAndName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ReportedValueInFeetByMonth = (value: FormControlState<{ [key: string]: number; }> | { [key: string]: number; } = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<{ [key: string]: number; }>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CoverCropStatus = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FallowStatus = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
