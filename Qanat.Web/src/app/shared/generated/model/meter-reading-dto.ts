/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { MeterReadingUnitTypeSimpleDto } from './meter-reading-unit-type-simple-dto';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class MeterReadingDto { 
    MeterReadingID?: number;
    MeterID?: number;
    MeterSerialNumber?: string | null;
    WellID?: number;
    ReadingDate?: string;
    PreviousReading?: number;
    CurrentReading?: number;
    Volume?: number;
    VolumeInAcreFeet?: number;
    MeterReadingUnitType?: MeterReadingUnitTypeSimpleDto;
    ReaderInitials?: string | null;
    Comment?: string | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface MeterReadingDtoForm { 
    MeterReadingID?: FormControl<number>;
    MeterID?: FormControl<number>;
    MeterSerialNumber?: FormControl<string>;
    WellID?: FormControl<number>;
    ReadingDate?: FormControl<string>;
    PreviousReading?: FormControl<number>;
    CurrentReading?: FormControl<number>;
    Volume?: FormControl<number>;
    VolumeInAcreFeet?: FormControl<number>;
    MeterReadingUnitType?: FormControl<MeterReadingUnitTypeSimpleDto>;
    ReaderInitials?: FormControl<string>;
    Comment?: FormControl<string>;
}

export class MeterReadingDtoFormControls { 
    public static MeterReadingID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MeterID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MeterSerialNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WellID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ReadingDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static PreviousReading = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CurrentReading = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Volume = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static VolumeInAcreFeet = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MeterReadingUnitType = (value: FormControlState<MeterReadingUnitTypeSimpleDto> | MeterReadingUnitTypeSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<MeterReadingUnitTypeSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ReaderInitials = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Comment = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
