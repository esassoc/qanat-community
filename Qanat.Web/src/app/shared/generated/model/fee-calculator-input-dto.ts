/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { MLRPIncentiveDto } from './mlrp-incentive-dto';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class FeeCalculatorInputDto { 
    WaterAccountID: number;
    ReportingPeriodID: number;
    FeeStructureID: number;
    SurfaceWaterDelivered?: number | null;
    SurfaceWaterIrrigationEfficiency?: number | null;
    MLRPIncentives?: Array<MLRPIncentiveDto> | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface FeeCalculatorInputDtoForm { 
    WaterAccountID: FormControl<number>;
    ReportingPeriodID: FormControl<number>;
    FeeStructureID: FormControl<number>;
    SurfaceWaterDelivered?: FormControl<number>;
    SurfaceWaterIrrigationEfficiency?: FormControl<number>;
    MLRPIncentives?: FormControl<Array<MLRPIncentiveDto>>;
}

export class FeeCalculatorInputDtoFormControls { 
    public static WaterAccountID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static ReportingPeriodID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static FeeStructureID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static SurfaceWaterDelivered = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SurfaceWaterIrrigationEfficiency = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MLRPIncentives = (value: FormControlState<Array<MLRPIncentiveDto>> | Array<MLRPIncentiveDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<MLRPIncentiveDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
