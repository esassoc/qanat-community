/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { WaterAccountMinimalDto } from './water-account-minimal-dto';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class WaterAccountContactDto { 
    WaterAccountContactID?: number;
    GeographyID?: number;
    ContactName?: string | null;
    ContactEmail?: string | null;
    ContactPhoneNumber?: string | null;
    Address?: string | null;
    SecondaryAddress?: string | null;
    City?: string | null;
    State?: string | null;
    ZipCode?: string | null;
    FullAddress?: string | null;
    PrefersPhysicalCommunication?: boolean | null;
    AddressValidated?: boolean;
    AddressValidationJson?: string | null;
    WaterAccounts?: Array<WaterAccountMinimalDto> | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface WaterAccountContactDtoForm { 
    WaterAccountContactID?: FormControl<number>;
    GeographyID?: FormControl<number>;
    ContactName?: FormControl<string>;
    ContactEmail?: FormControl<string>;
    ContactPhoneNumber?: FormControl<string>;
    Address?: FormControl<string>;
    SecondaryAddress?: FormControl<string>;
    City?: FormControl<string>;
    State?: FormControl<string>;
    ZipCode?: FormControl<string>;
    FullAddress?: FormControl<string>;
    PrefersPhysicalCommunication?: FormControl<boolean>;
    AddressValidated?: FormControl<boolean>;
    AddressValidationJson?: FormControl<string>;
    WaterAccounts?: FormControl<Array<WaterAccountMinimalDto>>;
}

export class WaterAccountContactDtoFormControls { 
    public static WaterAccountContactID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContactName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContactEmail = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContactPhoneNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Address = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SecondaryAddress = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static City = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static State = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ZipCode = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FullAddress = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static PrefersPhysicalCommunication = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AddressValidated = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AddressValidationJson = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccounts = (value: FormControlState<Array<WaterAccountMinimalDto>> | Array<WaterAccountMinimalDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<WaterAccountMinimalDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
