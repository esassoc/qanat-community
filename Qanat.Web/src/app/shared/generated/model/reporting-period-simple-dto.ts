/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class ReportingPeriodSimpleDto { 
    ReportingPeriodID?: number;
    GeographyID?: number;
    Name?: string | null;
    StartDate?: string;
    EndDate?: string;
    ReadyForAccountHolders?: boolean;
    IsDefault?: boolean;
    CoverCropSelfReportStartDate?: string | null;
    CoverCropSelfReportEndDate?: string | null;
    CoverCropSelfReportReadyForAccountHolders?: boolean;
    FallowSelfReportStartDate?: string | null;
    FallowSelfReportEndDate?: string | null;
    FallowSelfReportReadyForAccountHolders?: boolean;
    CreateDate?: string;
    CreateUserID?: number;
    UpdateDate?: string | null;
    UpdateUserID?: number | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface ReportingPeriodSimpleDtoForm { 
    ReportingPeriodID?: FormControl<number>;
    GeographyID?: FormControl<number>;
    Name?: FormControl<string>;
    StartDate?: FormControl<string>;
    EndDate?: FormControl<string>;
    ReadyForAccountHolders?: FormControl<boolean>;
    IsDefault?: FormControl<boolean>;
    CoverCropSelfReportStartDate?: FormControl<string>;
    CoverCropSelfReportEndDate?: FormControl<string>;
    CoverCropSelfReportReadyForAccountHolders?: FormControl<boolean>;
    FallowSelfReportStartDate?: FormControl<string>;
    FallowSelfReportEndDate?: FormControl<string>;
    FallowSelfReportReadyForAccountHolders?: FormControl<boolean>;
    CreateDate?: FormControl<string>;
    CreateUserID?: FormControl<number>;
    UpdateDate?: FormControl<string>;
    UpdateUserID?: FormControl<number>;
}

export class ReportingPeriodSimpleDtoFormControls { 
    public static ReportingPeriodID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Name = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static StartDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static EndDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ReadyForAccountHolders = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsDefault = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CoverCropSelfReportStartDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CoverCropSelfReportEndDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CoverCropSelfReportReadyForAccountHolders = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FallowSelfReportStartDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FallowSelfReportEndDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FallowSelfReportReadyForAccountHolders = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreateUserID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UpdateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UpdateUserID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
