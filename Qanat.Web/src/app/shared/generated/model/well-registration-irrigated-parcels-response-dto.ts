/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ParcelDisplayDto } from './parcel-display-dto';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class WellRegistrationIrrigatedParcelsResponseDto { 
    WellRegistrationID: number;
    Longitude: number;
    Latitude: number;
    GeographyID: number;
    IrrigatedParcels?: Array<ParcelDisplayDto> | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface WellRegistrationIrrigatedParcelsResponseDtoForm { 
    WellRegistrationID: FormControl<number>;
    Longitude: FormControl<number>;
    Latitude: FormControl<number>;
    GeographyID: FormControl<number>;
    IrrigatedParcels?: FormControl<Array<ParcelDisplayDto>>;
}

export class WellRegistrationIrrigatedParcelsResponseDtoFormControls { 
    public static WellRegistrationID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static Longitude = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static Latitude = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static IrrigatedParcels = (value: FormControlState<Array<ParcelDisplayDto>> | Array<ParcelDisplayDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<ParcelDisplayDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
