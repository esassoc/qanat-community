/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class StatementBatchUpsertDto { 
    StatementTemplateID: number;
    ReportingPeriodID: number;
    StatementBatchName: string;
    WaterAccountIDs?: Array<number> | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface StatementBatchUpsertDtoForm { 
    StatementTemplateID: FormControl<number>;
    ReportingPeriodID: FormControl<number>;
    StatementBatchName: FormControl<string>;
    WaterAccountIDs?: FormControl<Array<number>>;
}

export class StatementBatchUpsertDtoFormControls { 
    public static StatementTemplateID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static ReportingPeriodID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static StatementBatchName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
                Validators.minLength(1),
                Validators.maxLength(100),
            ],
        }
    );
    public static WaterAccountIDs = (value: FormControlState<Array<number>> | Array<number> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<number>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
