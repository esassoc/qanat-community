/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class GeographySimpleDto { 
    GeographyID?: number;
    GeographyConfigurationID?: number;
    GeographyName?: string | null;
    GeographyDisplayName?: string | null;
    GeographyDescription?: string | null;
    APNRegexPattern?: string | null;
    APNRegexPatternDisplay?: string | null;
    GSACanonicalID?: number | null;
    Color?: string | null;
    ContactEmail?: string | null;
    ContactPhoneNumber?: string | null;
    ContactAddressLine1?: string | null;
    ContactAddressLine2?: string | null;
    LandownerDashboardSupplyLabel?: string | null;
    LandownerDashboardUsageLabel?: string | null;
    CoordinateSystem?: number;
    AreaToAcresConversionFactor?: number;
    IsOpenETActive?: boolean;
    OpenETShapeFilePath?: string | null;
    OpenETRasterTimeseriesMultipolygonColumnToUseAsIdentifier?: string | null;
    SourceOfRecordWaterMeasurementTypeID?: number | null;
    SourceOfRecordExplanation?: string | null;
    ShowSupplyOnWaterBudgetComponent?: boolean;
    WaterBudgetSlotAHeader?: string | null;
    WaterBudgetSlotAWaterMeasurementTypeID?: number | null;
    WaterBudgetSlotBHeader?: string | null;
    WaterBudgetSlotBWaterMeasurementTypeID?: number | null;
    WaterBudgetSlotCHeader?: string | null;
    WaterBudgetSlotCWaterMeasurementTypeID?: number | null;
    FeeCalculatorEnabled?: boolean;
    AllowWaterMeasurementSelfReporting?: boolean;
    AllowFallowSelfReporting?: boolean;
    AllowCoverCropSelfReporting?: boolean;
    AllowLandownersToRequestAccountChanges?: boolean;
    IsDemoGeography?: boolean;
    DefaultDisplayYear?: number;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface GeographySimpleDtoForm { 
    GeographyID?: FormControl<number>;
    GeographyConfigurationID?: FormControl<number>;
    GeographyName?: FormControl<string>;
    GeographyDisplayName?: FormControl<string>;
    GeographyDescription?: FormControl<string>;
    APNRegexPattern?: FormControl<string>;
    APNRegexPatternDisplay?: FormControl<string>;
    GSACanonicalID?: FormControl<number>;
    Color?: FormControl<string>;
    ContactEmail?: FormControl<string>;
    ContactPhoneNumber?: FormControl<string>;
    ContactAddressLine1?: FormControl<string>;
    ContactAddressLine2?: FormControl<string>;
    LandownerDashboardSupplyLabel?: FormControl<string>;
    LandownerDashboardUsageLabel?: FormControl<string>;
    CoordinateSystem?: FormControl<number>;
    AreaToAcresConversionFactor?: FormControl<number>;
    IsOpenETActive?: FormControl<boolean>;
    OpenETShapeFilePath?: FormControl<string>;
    OpenETRasterTimeseriesMultipolygonColumnToUseAsIdentifier?: FormControl<string>;
    SourceOfRecordWaterMeasurementTypeID?: FormControl<number>;
    SourceOfRecordExplanation?: FormControl<string>;
    ShowSupplyOnWaterBudgetComponent?: FormControl<boolean>;
    WaterBudgetSlotAHeader?: FormControl<string>;
    WaterBudgetSlotAWaterMeasurementTypeID?: FormControl<number>;
    WaterBudgetSlotBHeader?: FormControl<string>;
    WaterBudgetSlotBWaterMeasurementTypeID?: FormControl<number>;
    WaterBudgetSlotCHeader?: FormControl<string>;
    WaterBudgetSlotCWaterMeasurementTypeID?: FormControl<number>;
    FeeCalculatorEnabled?: FormControl<boolean>;
    AllowWaterMeasurementSelfReporting?: FormControl<boolean>;
    AllowFallowSelfReporting?: FormControl<boolean>;
    AllowCoverCropSelfReporting?: FormControl<boolean>;
    AllowLandownersToRequestAccountChanges?: FormControl<boolean>;
    IsDemoGeography?: FormControl<boolean>;
    DefaultDisplayYear?: FormControl<number>;
}

export class GeographySimpleDtoFormControls { 
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyConfigurationID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyDisplayName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyDescription = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static APNRegexPattern = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static APNRegexPatternDisplay = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GSACanonicalID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Color = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContactEmail = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContactPhoneNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContactAddressLine1 = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContactAddressLine2 = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LandownerDashboardSupplyLabel = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LandownerDashboardUsageLabel = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CoordinateSystem = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AreaToAcresConversionFactor = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsOpenETActive = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OpenETShapeFilePath = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OpenETRasterTimeseriesMultipolygonColumnToUseAsIdentifier = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SourceOfRecordWaterMeasurementTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SourceOfRecordExplanation = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ShowSupplyOnWaterBudgetComponent = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterBudgetSlotAHeader = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterBudgetSlotAWaterMeasurementTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterBudgetSlotBHeader = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterBudgetSlotBWaterMeasurementTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterBudgetSlotCHeader = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterBudgetSlotCWaterMeasurementTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FeeCalculatorEnabled = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllowWaterMeasurementSelfReporting = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllowFallowSelfReporting = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllowCoverCropSelfReporting = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllowLandownersToRequestAccountChanges = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsDemoGeography = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DefaultDisplayYear = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
