/**
 * Qanat.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { WaterMeasurementTypeSimpleDto } from '././water-measurement-type-simple-dto';
import { GeographySimpleDto } from '././geography-simple-dto';
import { WaterMeasurementSelfReportStatusSimpleDto } from '././water-measurement-self-report-status-simple-dto';
import { WaterMeasurementSelfReportLineItemSimpleDto } from '././water-measurement-self-report-line-item-simple-dto';
import { WaterAccountSimpleDto } from '././water-account-simple-dto';
import { UserSimpleDto } from '././user-simple-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class WaterMeasurementSelfReportDto { 
    WaterMeasurementSelfReportID?: number;
    Geography?: GeographySimpleDto;
    WaterAccount?: WaterAccountSimpleDto;
    WaterMeasurementType?: WaterMeasurementTypeSimpleDto;
    ReportingYear?: number;
    WaterMeasurementSelfReportStatus?: WaterMeasurementSelfReportStatusSimpleDto;
    SubmittedDate?: string;
    ApprovedDate?: string;
    ReturnedDate?: string;
    LineItems?: Array<WaterMeasurementSelfReportLineItemSimpleDto>;
    CreateDate?: string;
    CreateUser?: UserSimpleDto;
    UpdateDate?: string;
    UpdateUser?: UserSimpleDto;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface WaterMeasurementSelfReportDtoForm { 
    WaterMeasurementSelfReportID?: FormControl<number>;
    Geography?: FormControl<GeographySimpleDto>;
    WaterAccount?: FormControl<WaterAccountSimpleDto>;
    WaterMeasurementType?: FormControl<WaterMeasurementTypeSimpleDto>;
    ReportingYear?: FormControl<number>;
    WaterMeasurementSelfReportStatus?: FormControl<WaterMeasurementSelfReportStatusSimpleDto>;
    SubmittedDate?: FormControl<string>;
    ApprovedDate?: FormControl<string>;
    ReturnedDate?: FormControl<string>;
    LineItems?: FormControl<Array<WaterMeasurementSelfReportLineItemSimpleDto>>;
    CreateDate?: FormControl<string>;
    CreateUser?: FormControl<UserSimpleDto>;
    UpdateDate?: FormControl<string>;
    UpdateUser?: FormControl<UserSimpleDto>;
}

export class WaterMeasurementSelfReportDtoFormControls { 
    public static WaterMeasurementSelfReportID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Geography = (value: FormControlState<GeographySimpleDto> | GeographySimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<GeographySimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccount = (value: FormControlState<WaterAccountSimpleDto> | WaterAccountSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterAccountSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterMeasurementType = (value: FormControlState<WaterMeasurementTypeSimpleDto> | WaterMeasurementTypeSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterMeasurementTypeSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ReportingYear = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterMeasurementSelfReportStatus = (value: FormControlState<WaterMeasurementSelfReportStatusSimpleDto> | WaterMeasurementSelfReportStatusSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterMeasurementSelfReportStatusSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SubmittedDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ApprovedDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ReturnedDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LineItems = (value: FormControlState<Array<WaterMeasurementSelfReportLineItemSimpleDto>> | Array<WaterMeasurementSelfReportLineItemSimpleDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<WaterMeasurementSelfReportLineItemSimpleDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreateUser = (value: FormControlState<UserSimpleDto> | UserSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<UserSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UpdateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UpdateUser = (value: FormControlState<UserSimpleDto> | UserSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<UserSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
