/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { WaterTypeSimpleDto } from './water-type-simple-dto';
import { ParcelMinimalDto } from './parcel-minimal-dto';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class ParcelSupplyDetailDto { 
    ParcelSupplyID?: number;
    GeographyID?: number;
    ParcelID?: number;
    TransactionDate?: string;
    EffectiveDate?: string;
    TransactionAmount?: number;
    WaterTypeID?: number | null;
    UserID?: number | null;
    UserComment?: string | null;
    UploadedFileName?: string | null;
    Parcel?: ParcelMinimalDto;
    WaterType?: WaterTypeSimpleDto;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface ParcelSupplyDetailDtoForm { 
    ParcelSupplyID?: FormControl<number>;
    GeographyID?: FormControl<number>;
    ParcelID?: FormControl<number>;
    TransactionDate?: FormControl<string>;
    EffectiveDate?: FormControl<string>;
    TransactionAmount?: FormControl<number>;
    WaterTypeID?: FormControl<number>;
    UserID?: FormControl<number>;
    UserComment?: FormControl<string>;
    UploadedFileName?: FormControl<string>;
    Parcel?: FormControl<ParcelMinimalDto>;
    WaterType?: FormControl<WaterTypeSimpleDto>;
}

export class ParcelSupplyDetailDtoFormControls { 
    public static ParcelSupplyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ParcelID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TransactionDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static EffectiveDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TransactionAmount = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UserID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UserComment = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UploadedFileName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Parcel = (value: FormControlState<ParcelMinimalDto> | ParcelMinimalDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<ParcelMinimalDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterType = (value: FormControlState<WaterTypeSimpleDto> | WaterTypeSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterTypeSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
