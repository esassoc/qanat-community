/**
 * Qanat.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { WaterAccountMinimalDto } from '././water-account-minimal-dto';
import { UserWithFullNameDto } from '././user-with-full-name-dto';
import { WaterAccountRoleSimpleDto } from '././water-account-role-simple-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class WaterAccountUserMinimalDto { 
    WaterAccountUserID?: number;
    UserID?: number;
    UserFullName?: string;
    WaterAccountID?: number;
    WaterAccountRoleID?: number;
    ClaimDate?: string;
    User?: UserWithFullNameDto;
    WaterAccountRole?: WaterAccountRoleSimpleDto;
    WaterAccount?: WaterAccountMinimalDto;
    UserEmail?: string;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface WaterAccountUserMinimalDtoForm { 
    WaterAccountUserID?: FormControl<number>;
    UserID?: FormControl<number>;
    UserFullName?: FormControl<string>;
    WaterAccountID?: FormControl<number>;
    WaterAccountRoleID?: FormControl<number>;
    ClaimDate?: FormControl<string>;
    User?: FormControl<UserWithFullNameDto>;
    WaterAccountRole?: FormControl<WaterAccountRoleSimpleDto>;
    WaterAccount?: FormControl<WaterAccountMinimalDto>;
    UserEmail?: FormControl<string>;
}

export class WaterAccountUserMinimalDtoFormControls { 
    public static WaterAccountUserID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UserID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UserFullName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccountID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccountRoleID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ClaimDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static User = (value: FormControlState<UserWithFullNameDto> | UserWithFullNameDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<UserWithFullNameDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccountRole = (value: FormControlState<WaterAccountRoleSimpleDto> | WaterAccountRoleSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterAccountRoleSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccount = (value: FormControlState<WaterAccountMinimalDto> | WaterAccountMinimalDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterAccountMinimalDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UserEmail = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
