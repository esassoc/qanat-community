/**
 * Qanat.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { GeographyDisplayDto } from '././geography-display-dto';
import { WellStatusSimpleDto } from '././well-status-simple-dto';
import { WellRegistrationMinimalDto } from '././well-registration-minimal-dto';
import { ParcelMinimalDto } from '././parcel-minimal-dto';
import { ParcelDisplayDto } from '././parcel-display-dto';
import { MeterGridDto } from '././meter-grid-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class WellDetailDto { 
    WellID?: number;
    WellName?: string;
    WellStatus?: WellStatusSimpleDto;
    Parcel?: ParcelMinimalDto;
    IrrigatedParcels?: Array<ParcelDisplayDto>;
    WellRegistration?: WellRegistrationMinimalDto;
    Geography?: GeographyDisplayDto;
    Meter?: MeterGridDto;
    StateWCRNumber?: string;
    CountyWellPermitNumber?: string;
    Latitude?: number;
    Longitude?: number;
    DateDrilled?: string;
    WellDepth?: number;
    MetersEnabled?: boolean;
    Notes?: string;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface WellDetailDtoForm { 
    WellID?: FormControl<number>;
    WellName?: FormControl<string>;
    WellStatus?: FormControl<WellStatusSimpleDto>;
    Parcel?: FormControl<ParcelMinimalDto>;
    IrrigatedParcels?: FormControl<Array<ParcelDisplayDto>>;
    WellRegistration?: FormControl<WellRegistrationMinimalDto>;
    Geography?: FormControl<GeographyDisplayDto>;
    Meter?: FormControl<MeterGridDto>;
    StateWCRNumber?: FormControl<string>;
    CountyWellPermitNumber?: FormControl<string>;
    Latitude?: FormControl<number>;
    Longitude?: FormControl<number>;
    DateDrilled?: FormControl<string>;
    WellDepth?: FormControl<number>;
    MetersEnabled?: FormControl<boolean>;
    Notes?: FormControl<string>;
}

export class WellDetailDtoFormControls { 
    public static WellID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WellName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WellStatus = (value: FormControlState<WellStatusSimpleDto> | WellStatusSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WellStatusSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Parcel = (value: FormControlState<ParcelMinimalDto> | ParcelMinimalDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<ParcelMinimalDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IrrigatedParcels = (value: FormControlState<Array<ParcelDisplayDto>> | Array<ParcelDisplayDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<ParcelDisplayDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WellRegistration = (value: FormControlState<WellRegistrationMinimalDto> | WellRegistrationMinimalDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WellRegistrationMinimalDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Geography = (value: FormControlState<GeographyDisplayDto> | GeographyDisplayDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<GeographyDisplayDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Meter = (value: FormControlState<MeterGridDto> | MeterGridDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<MeterGridDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static StateWCRNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CountyWellPermitNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Latitude = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Longitude = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DateDrilled = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WellDepth = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MetersEnabled = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Notes = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
