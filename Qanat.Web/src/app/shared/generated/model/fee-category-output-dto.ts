/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class FeeCategoryOutputDto { 
    Name?: string | null;
    TotalAllocationInAcreFeet?: number | null;
    AllocationUsedInAcreFeet?: number | null;
    AllocationUsedInPercent?: number | null;
    AllocationRemainingInAcreFeet?: number | null;
    AllocationRemainingInPercent?: number | null;
    RemainingGroundwaterConsumptionInAcreFeet?: number | null;
    Fee?: number | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface FeeCategoryOutputDtoForm { 
    Name?: FormControl<string>;
    TotalAllocationInAcreFeet?: FormControl<number>;
    AllocationUsedInAcreFeet?: FormControl<number>;
    AllocationUsedInPercent?: FormControl<number>;
    AllocationRemainingInAcreFeet?: FormControl<number>;
    AllocationRemainingInPercent?: FormControl<number>;
    RemainingGroundwaterConsumptionInAcreFeet?: FormControl<number>;
    Fee?: FormControl<number>;
}

export class FeeCategoryOutputDtoFormControls { 
    public static Name = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TotalAllocationInAcreFeet = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationUsedInAcreFeet = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationUsedInPercent = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationRemainingInAcreFeet = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationRemainingInPercent = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RemainingGroundwaterConsumptionInAcreFeet = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Fee = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
