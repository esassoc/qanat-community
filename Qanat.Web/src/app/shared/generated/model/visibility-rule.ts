/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { VisibilityRuleCondition } from './visibility-rule-condition';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class VisibilityRule { 
    Type?: string | null;
    BooleanOperator?: string | null;
    Conditions?: Array<VisibilityRuleCondition> | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface VisibilityRuleForm { 
    Type?: FormControl<string>;
    BooleanOperator?: FormControl<string>;
    Conditions?: FormControl<Array<VisibilityRuleCondition>>;
}

export class VisibilityRuleFormControls { 
    public static Type = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static BooleanOperator = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Conditions = (value: FormControlState<Array<VisibilityRuleCondition>> | Array<VisibilityRuleCondition> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<VisibilityRuleCondition>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
