/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { GeographyRoleSimpleDto } from './geography-role-simple-dto';
import { GeographySimpleDto } from './geography-simple-dto';
import { UserDto } from './user-dto';
import { WaterAccountSimpleDto } from './water-account-simple-dto';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class GeographyUserDto { 
    GeographyUserID?: number;
    Geography?: GeographySimpleDto;
    User?: UserDto;
    GeographyRole?: GeographyRoleSimpleDto;
    readonly WaterAccountCount?: number;
    WaterAccounts?: Array<WaterAccountSimpleDto> | null;
    WellRegistrationCount?: number;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface GeographyUserDtoForm { 
    GeographyUserID?: FormControl<number>;
    Geography?: FormControl<GeographySimpleDto>;
    User?: FormControl<UserDto>;
    GeographyRole?: FormControl<GeographyRoleSimpleDto>;
    WaterAccountCount?: FormControl<number>;
    WaterAccounts?: FormControl<Array<WaterAccountSimpleDto>>;
    WellRegistrationCount?: FormControl<number>;
}

export class GeographyUserDtoFormControls { 
    public static GeographyUserID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Geography = (value: FormControlState<GeographySimpleDto> | GeographySimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<GeographySimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static User = (value: FormControlState<UserDto> | UserDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<UserDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyRole = (value: FormControlState<GeographyRoleSimpleDto> | GeographyRoleSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<GeographyRoleSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccountCount = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccounts = (value: FormControlState<Array<WaterAccountSimpleDto>> | Array<WaterAccountSimpleDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<WaterAccountSimpleDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WellRegistrationCount = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
