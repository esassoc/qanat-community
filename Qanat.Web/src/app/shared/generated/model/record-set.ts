/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { NotMeasuredInstance } from './not-measured-instance';
import { Record } from './record';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class RecordSet { 
    CanonicalName?: string | null;
    Records?: Array<Record> | null;
    NotMeasured?: NotMeasuredInstance;
    Hash?: string | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface RecordSetForm { 
    CanonicalName?: FormControl<string>;
    Records?: FormControl<Array<Record>>;
    NotMeasured?: FormControl<NotMeasuredInstance>;
    Hash?: FormControl<string>;
}

export class RecordSetFormControls { 
    public static CanonicalName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Records = (value: FormControlState<Array<Record>> | Array<Record> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<Record>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static NotMeasured = (value: FormControlState<NotMeasuredInstance> | NotMeasuredInstance = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<NotMeasuredInstance>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Hash = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
