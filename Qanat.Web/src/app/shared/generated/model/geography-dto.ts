/**
 * Qanat.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { GeographyConfigurationSimpleDto } from '././geography-configuration-simple-dto';
import { WaterMeasurementTypeSimpleDto } from '././water-measurement-type-simple-dto';
import { BoundingBoxDto } from '././bounding-box-dto';
import { ReportingPeriodSimpleDto } from '././reporting-period-simple-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class GeographyDto { 
    GeographyID?: number;
    GeographyConfiguration?: GeographyConfigurationSimpleDto;
    GeographyName?: string;
    GeographyDisplayName?: string;
    GeographyDescription?: string;
    APNRegexPattern?: string;
    APNRegexPatternDisplay?: string;
    GSACanonicalID?: number;
    Color?: string;
    ContactEmail?: string;
    ContactPhoneNumber?: string;
    LandownerDashboardSupplyLabel?: string;
    LandownerDashboardUsageLabel?: string;
    BoundingBox?: BoundingBoxDto;
    CoordinateSystem?: number;
    AreaToAcresConversionFactor?: number;
    DefaultReportingPeriod?: ReportingPeriodSimpleDto;
    IsOpenETActive?: boolean;
    SourceOfRecordWaterMeasurementType?: WaterMeasurementTypeSimpleDto;
    SourceOfRecordExplanation?: string;
    ShowSupplyOnWaterBudgetComponent?: boolean;
    WaterBudgetSlotAHeader?: string;
    WaterBudgetSlotBHeader?: string;
    WaterBudgetSlotCHeader?: string;
    IsDemoGeography?: boolean;
    AllocationPlansEnabled?: boolean;
    AllocationPlansVisibleToLandowners?: boolean;
    AllocationPlansVisibleToPublic?: boolean;
    WellRegistryEnabled?: boolean;
    LandingPageEnabled?: boolean;
    MeterDataEnabled?: boolean;
    DisplayUsageGeometriesAsField?: boolean;
    AllowLandownersToRequestAccountChanges?: boolean;
    AllowWaterMeasurementSelfReporting?: boolean;
    FeeCalculatorEnabled?: boolean;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface GeographyDtoForm { 
    GeographyID?: FormControl<number>;
    GeographyConfiguration?: FormControl<GeographyConfigurationSimpleDto>;
    GeographyName?: FormControl<string>;
    GeographyDisplayName?: FormControl<string>;
    GeographyDescription?: FormControl<string>;
    APNRegexPattern?: FormControl<string>;
    APNRegexPatternDisplay?: FormControl<string>;
    GSACanonicalID?: FormControl<number>;
    Color?: FormControl<string>;
    ContactEmail?: FormControl<string>;
    ContactPhoneNumber?: FormControl<string>;
    LandownerDashboardSupplyLabel?: FormControl<string>;
    LandownerDashboardUsageLabel?: FormControl<string>;
    BoundingBox?: FormControl<BoundingBoxDto>;
    CoordinateSystem?: FormControl<number>;
    AreaToAcresConversionFactor?: FormControl<number>;
    DefaultReportingPeriod?: FormControl<ReportingPeriodSimpleDto>;
    IsOpenETActive?: FormControl<boolean>;
    SourceOfRecordWaterMeasurementType?: FormControl<WaterMeasurementTypeSimpleDto>;
    SourceOfRecordExplanation?: FormControl<string>;
    ShowSupplyOnWaterBudgetComponent?: FormControl<boolean>;
    WaterBudgetSlotAHeader?: FormControl<string>;
    WaterBudgetSlotBHeader?: FormControl<string>;
    WaterBudgetSlotCHeader?: FormControl<string>;
    IsDemoGeography?: FormControl<boolean>;
    AllocationPlansEnabled?: FormControl<boolean>;
    AllocationPlansVisibleToLandowners?: FormControl<boolean>;
    AllocationPlansVisibleToPublic?: FormControl<boolean>;
    WellRegistryEnabled?: FormControl<boolean>;
    LandingPageEnabled?: FormControl<boolean>;
    MeterDataEnabled?: FormControl<boolean>;
    DisplayUsageGeometriesAsField?: FormControl<boolean>;
    AllowLandownersToRequestAccountChanges?: FormControl<boolean>;
    AllowWaterMeasurementSelfReporting?: FormControl<boolean>;
    FeeCalculatorEnabled?: FormControl<boolean>;
}

export class GeographyDtoFormControls { 
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyConfiguration = (value: FormControlState<GeographyConfigurationSimpleDto> | GeographyConfigurationSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<GeographyConfigurationSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyDisplayName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyDescription = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static APNRegexPattern = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static APNRegexPatternDisplay = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GSACanonicalID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Color = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContactEmail = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContactPhoneNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LandownerDashboardSupplyLabel = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LandownerDashboardUsageLabel = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static BoundingBox = (value: FormControlState<BoundingBoxDto> | BoundingBoxDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<BoundingBoxDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CoordinateSystem = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AreaToAcresConversionFactor = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DefaultReportingPeriod = (value: FormControlState<ReportingPeriodSimpleDto> | ReportingPeriodSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<ReportingPeriodSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsOpenETActive = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SourceOfRecordWaterMeasurementType = (value: FormControlState<WaterMeasurementTypeSimpleDto> | WaterMeasurementTypeSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterMeasurementTypeSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SourceOfRecordExplanation = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ShowSupplyOnWaterBudgetComponent = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterBudgetSlotAHeader = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterBudgetSlotBHeader = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterBudgetSlotCHeader = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsDemoGeography = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationPlansEnabled = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationPlansVisibleToLandowners = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationPlansVisibleToPublic = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WellRegistryEnabled = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LandingPageEnabled = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MeterDataEnabled = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DisplayUsageGeometriesAsField = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllowLandownersToRequestAccountChanges = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllowWaterMeasurementSelfReporting = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FeeCalculatorEnabled = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
