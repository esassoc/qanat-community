/**
 * Qanat.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { WaterAccountDisplayDto } from '././water-account-display-dto';
import { ZoneMinimalDto } from '././zone-minimal-dto';
import { ParcelStatusSimpleDto } from '././parcel-status-simple-dto';
import { WellSimpleDto } from '././well-simple-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class ParcelDetailDto { 
    ParcelID?: number;
    GeographyID?: number;
    GeographyName?: string;
    WaterAccountID?: number;
    ParcelNumber?: string;
    ParcelArea?: number;
    ParcelStatusID?: number;
    OwnerAddress?: string;
    OwnerName?: string;
    WaterAccount?: WaterAccountDisplayDto;
    ParcelStatus?: ParcelStatusSimpleDto;
    Zones?: Array<ZoneMinimalDto>;
    WellsOnParcel?: Array<WellSimpleDto>;
    IrrigatedByWells?: Array<WellSimpleDto>;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface ParcelDetailDtoForm { 
    ParcelID?: FormControl<number>;
    GeographyID?: FormControl<number>;
    GeographyName?: FormControl<string>;
    WaterAccountID?: FormControl<number>;
    ParcelNumber?: FormControl<string>;
    ParcelArea?: FormControl<number>;
    ParcelStatusID?: FormControl<number>;
    OwnerAddress?: FormControl<string>;
    OwnerName?: FormControl<string>;
    WaterAccount?: FormControl<WaterAccountDisplayDto>;
    ParcelStatus?: FormControl<ParcelStatusSimpleDto>;
    Zones?: FormControl<Array<ZoneMinimalDto>>;
    WellsOnParcel?: FormControl<Array<WellSimpleDto>>;
    IrrigatedByWells?: FormControl<Array<WellSimpleDto>>;
}

export class ParcelDetailDtoFormControls { 
    public static ParcelID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccountID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ParcelNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ParcelArea = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ParcelStatusID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OwnerAddress = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OwnerName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterAccount = (value: FormControlState<WaterAccountDisplayDto> | WaterAccountDisplayDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterAccountDisplayDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ParcelStatus = (value: FormControlState<ParcelStatusSimpleDto> | ParcelStatusSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<ParcelStatusSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Zones = (value: FormControlState<Array<ZoneMinimalDto>> | Array<ZoneMinimalDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<ZoneMinimalDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WellsOnParcel = (value: FormControlState<Array<WellSimpleDto>> | Array<WellSimpleDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<WellSimpleDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IrrigatedByWells = (value: FormControlState<Array<WellSimpleDto>> | Array<WellSimpleDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<WellSimpleDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
