/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { StatementTemplateTypeSimpleDto } from './statement-template-type-simple-dto';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class StatementTemplateDto { 
    StatementTemplateID?: number;
    GeographyID?: number;
    StatementTemplateType?: StatementTemplateTypeSimpleDto;
    TemplateTitle?: string | null;
    LastUpdated?: string;
    UpdateUserID?: number;
    UpdateUserFullName?: string | null;
    InternalDescription?: string | null;
    CustomFieldsContent?: { [key: string]: string | null; } | null;
    CustomLabels?: { [key: string]: string | null; } | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface StatementTemplateDtoForm { 
    StatementTemplateID?: FormControl<number>;
    GeographyID?: FormControl<number>;
    StatementTemplateType?: FormControl<StatementTemplateTypeSimpleDto>;
    TemplateTitle?: FormControl<string>;
    LastUpdated?: FormControl<string>;
    UpdateUserID?: FormControl<number>;
    UpdateUserFullName?: FormControl<string>;
    InternalDescription?: FormControl<string>;
    CustomFieldsContent?: FormControl<{ [key: string]: string | null; }>;
    CustomLabels?: FormControl<{ [key: string]: string | null; }>;
}

export class StatementTemplateDtoFormControls { 
    public static StatementTemplateID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static StatementTemplateType = (value: FormControlState<StatementTemplateTypeSimpleDto> | StatementTemplateTypeSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<StatementTemplateTypeSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TemplateTitle = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LastUpdated = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UpdateUserID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UpdateUserFullName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static InternalDescription = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CustomFieldsContent = (value: FormControlState<{ [key: string]: string | null; }> | { [key: string]: string | null; } = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<{ [key: string]: string | null; }>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CustomLabels = (value: FormControlState<{ [key: string]: string | null; }> | { [key: string]: string | null; } = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<{ [key: string]: string | null; }>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
