/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class StatementTemplatePdfPreviewRequestDto { 
    WaterAccountID: number;
    ReportingPeriodYear: number;
    StatementTemplateTypeID: number;
    StatementTemplateTitle?: string | null;
    CustomFields?: { [key: string]: string | null; } | null;
    CustomLabels?: { [key: string]: string | null; } | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface StatementTemplatePdfPreviewRequestDtoForm { 
    WaterAccountID: FormControl<number>;
    ReportingPeriodYear: FormControl<number>;
    StatementTemplateTypeID: FormControl<number>;
    StatementTemplateTitle?: FormControl<string>;
    CustomFields?: FormControl<{ [key: string]: string | null; }>;
    CustomLabels?: FormControl<{ [key: string]: string | null; }>;
}

export class StatementTemplatePdfPreviewRequestDtoFormControls { 
    public static WaterAccountID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static ReportingPeriodYear = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static StatementTemplateTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static StatementTemplateTitle = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CustomFields = (value: FormControlState<{ [key: string]: string | null; }> | { [key: string]: string | null; } = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<{ [key: string]: string | null; }>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CustomLabels = (value: FormControlState<{ [key: string]: string | null; }> | { [key: string]: string | null; } = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<{ [key: string]: string | null; }>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
