/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { MessageSeverity } from './message-severity';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class InstanceValidationMessage { 
    Severity?: MessageSeverity;
    MessageCanonicalName?: string | null;
    Message?: string | null;
    RecordKey?: string | null;
    FieldCanonicalName?: string | null;
    RecordSetCanonicalName?: string | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}
export namespace InstanceValidationMessage {
}


export interface InstanceValidationMessageForm { 
    Severity?: FormControl<MessageSeverity>;
    MessageCanonicalName?: FormControl<string>;
    Message?: FormControl<string>;
    RecordKey?: FormControl<string>;
    FieldCanonicalName?: FormControl<string>;
    RecordSetCanonicalName?: FormControl<string>;
}
export namespace InstanceValidationMessage {
}


export class InstanceValidationMessageFormControls { 
    public static Severity = (value: FormControlState<MessageSeverity> | MessageSeverity = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<MessageSeverity>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MessageCanonicalName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Message = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RecordKey = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FieldCanonicalName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RecordSetCanonicalName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
export namespace InstanceValidationMessage {
}

