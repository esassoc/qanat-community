/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { WaterAccountContactSearchResultDto } from './water-account-contact-search-result-dto';
import { WaterAccountContactSearchResultWithMatchedFieldsDtoMatchedFields } from './water-account-contact-search-result-with-matched-fields-dto-matched-fields';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class WaterAccountContactSearchResultWithMatchedFieldsDto { 
    WaterAccountContact?: WaterAccountContactSearchResultDto;
    MatchedFields?: WaterAccountContactSearchResultWithMatchedFieldsDtoMatchedFields | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface WaterAccountContactSearchResultWithMatchedFieldsDtoForm { 
    WaterAccountContact?: FormControl<WaterAccountContactSearchResultDto>;
    MatchedFields?: FormControl<WaterAccountContactSearchResultWithMatchedFieldsDtoMatchedFields>;
}

export class WaterAccountContactSearchResultWithMatchedFieldsDtoFormControls { 
    public static WaterAccountContact = (value: FormControlState<WaterAccountContactSearchResultDto> | WaterAccountContactSearchResultDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterAccountContactSearchResultDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MatchedFields = (value: FormControlState<WaterAccountContactSearchResultWithMatchedFieldsDtoMatchedFields> | WaterAccountContactSearchResultWithMatchedFieldsDtoMatchedFields = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterAccountContactSearchResultWithMatchedFieldsDtoMatchedFields>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
