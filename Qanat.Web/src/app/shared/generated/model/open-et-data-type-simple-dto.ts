/**
 * Qanat.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class OpenETDataTypeSimpleDto { 
    OpenETDataTypeID?: number;
    OpenETDataTypeName?: string | null;
    OpenETDataTypeDisplayName?: string | null;
    OpenETDataTypeVariableName?: string | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface OpenETDataTypeSimpleDtoForm { 
    OpenETDataTypeID?: FormControl<number>;
    OpenETDataTypeName?: FormControl<string>;
    OpenETDataTypeDisplayName?: FormControl<string>;
    OpenETDataTypeVariableName?: FormControl<string>;
}

export class OpenETDataTypeSimpleDtoFormControls { 
    public static OpenETDataTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OpenETDataTypeName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OpenETDataTypeDisplayName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OpenETDataTypeVariableName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
