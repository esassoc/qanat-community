/**
 * Qanat.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ModelSimpleDto } from '././model-simple-dto';
import { UserDto } from '././user-dto';
import { GETActionStatusSimpleDto } from '././get-action-status-simple-dto';
import { ScenarioSimpleDto } from '././scenario-simple-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class GETActionDto { 
    GETActionID?: number;
    GETActionStatus?: GETActionStatusSimpleDto;
    Model?: ModelSimpleDto;
    Scenario?: ScenarioSimpleDto;
    User?: UserDto;
    CreateDate?: string;
    LastUpdateDate?: string;
    GETRunID?: number;
    GETErrorMessage?: string;
    ActionName?: string;
    RunName?: string;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface GETActionDtoForm { 
    GETActionID?: FormControl<number>;
    GETActionStatus?: FormControl<GETActionStatusSimpleDto>;
    Model?: FormControl<ModelSimpleDto>;
    Scenario?: FormControl<ScenarioSimpleDto>;
    User?: FormControl<UserDto>;
    CreateDate?: FormControl<string>;
    LastUpdateDate?: FormControl<string>;
    GETRunID?: FormControl<number>;
    GETErrorMessage?: FormControl<string>;
    ActionName?: FormControl<string>;
    RunName?: FormControl<string>;
}

export class GETActionDtoFormControls { 
    public static GETActionID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GETActionStatus = (value: FormControlState<GETActionStatusSimpleDto> | GETActionStatusSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<GETActionStatusSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Model = (value: FormControlState<ModelSimpleDto> | ModelSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<ModelSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Scenario = (value: FormControlState<ScenarioSimpleDto> | ScenarioSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<ScenarioSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static User = (value: FormControlState<UserDto> | UserDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<UserDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LastUpdateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GETRunID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GETErrorMessage = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ActionName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RunName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
