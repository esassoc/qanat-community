/**
 * Qanat.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { UserSimpleDto } from '././user-simple-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class ReportingPeriodDto { 
    ReportingPeriodID?: number;
    Name?: string;
    StartDate?: string;
    EndDate?: string;
    ReadyForAccountHolders?: boolean;
    readonly IsDefaultReportingPeriod?: boolean;
    CreateDate?: string;
    CreateUser?: UserSimpleDto;
    UpdateDate?: string;
    UpdateUser?: UserSimpleDto;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface ReportingPeriodDtoForm { 
    ReportingPeriodID?: FormControl<number>;
    Name?: FormControl<string>;
    StartDate?: FormControl<string>;
    EndDate?: FormControl<string>;
    ReadyForAccountHolders?: FormControl<boolean>;
    IsDefaultReportingPeriod?: FormControl<boolean>;
    CreateDate?: FormControl<string>;
    CreateUser?: FormControl<UserSimpleDto>;
    UpdateDate?: FormControl<string>;
    UpdateUser?: FormControl<UserSimpleDto>;
}

export class ReportingPeriodDtoFormControls { 
    public static ReportingPeriodID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Name = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static StartDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static EndDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ReadyForAccountHolders = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsDefaultReportingPeriod = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreateUser = (value: FormControlState<UserSimpleDto> | UserSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<UserSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UpdateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UpdateUser = (value: FormControlState<UserSimpleDto> | UserSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<UserSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
