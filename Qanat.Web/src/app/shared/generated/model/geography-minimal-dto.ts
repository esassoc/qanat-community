/**
 * Qanat.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { GeographyConfigurationSimpleDto } from '././geography-configuration-simple-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class GeographyMinimalDto { 
    GeographyID?: number;
    GeographyName?: string;
    GeographyDisplayName?: string;
    DefaultDisplayYear?: number;
    DisplayUsageGeometriesAsField?: boolean;
    AllowLandownersToRequestAccountChanges?: boolean;
    AllowWaterMeasurementSelfReporting?: boolean;
    AllocationPlansEnabled?: boolean;
    AllocationPlansVisibleToLandowners?: boolean;
    AllocationPlansVisibleToPublic?: boolean;
    GeographyConfiguration?: GeographyConfigurationSimpleDto;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface GeographyMinimalDtoForm { 
    GeographyID?: FormControl<number>;
    GeographyName?: FormControl<string>;
    GeographyDisplayName?: FormControl<string>;
    DefaultDisplayYear?: FormControl<number>;
    DisplayUsageGeometriesAsField?: FormControl<boolean>;
    AllowLandownersToRequestAccountChanges?: FormControl<boolean>;
    AllowWaterMeasurementSelfReporting?: FormControl<boolean>;
    AllocationPlansEnabled?: FormControl<boolean>;
    AllocationPlansVisibleToLandowners?: FormControl<boolean>;
    AllocationPlansVisibleToPublic?: FormControl<boolean>;
    GeographyConfiguration?: FormControl<GeographyConfigurationSimpleDto>;
}

export class GeographyMinimalDtoFormControls { 
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyDisplayName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DefaultDisplayYear = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DisplayUsageGeometriesAsField = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllowLandownersToRequestAccountChanges = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllowWaterMeasurementSelfReporting = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationPlansEnabled = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationPlansVisibleToLandowners = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AllocationPlansVisibleToPublic = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyConfiguration = (value: FormControlState<GeographyConfigurationSimpleDto> | GeographyConfigurationSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<GeographyConfigurationSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
