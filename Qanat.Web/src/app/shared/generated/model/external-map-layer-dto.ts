/**
 * Qanat.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ExternalMapLayerTypeSimpleDto } from '././external-map-layer-type-simple-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class ExternalMapLayerDto { 
    ExternalMapLayerID?: number;
    GeographyID?: number;
    ExternalMapLayerDisplayName?: string;
    ExternalMapLayerType?: ExternalMapLayerTypeSimpleDto;
    ExternalMapLayerURL?: string;
    LayerIsOnByDefault?: boolean;
    IsActive?: boolean;
    ExternalMapLayerDescription?: string;
    PopUpField?: string;
    MinZoom?: number;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface ExternalMapLayerDtoForm { 
    ExternalMapLayerID?: FormControl<number>;
    GeographyID?: FormControl<number>;
    ExternalMapLayerDisplayName?: FormControl<string>;
    ExternalMapLayerType?: FormControl<ExternalMapLayerTypeSimpleDto>;
    ExternalMapLayerURL?: FormControl<string>;
    LayerIsOnByDefault?: FormControl<boolean>;
    IsActive?: FormControl<boolean>;
    ExternalMapLayerDescription?: FormControl<string>;
    PopUpField?: FormControl<string>;
    MinZoom?: FormControl<number>;
}

export class ExternalMapLayerDtoFormControls { 
    public static ExternalMapLayerID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static GeographyID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ExternalMapLayerDisplayName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ExternalMapLayerType = (value: FormControlState<ExternalMapLayerTypeSimpleDto> | ExternalMapLayerTypeSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<ExternalMapLayerTypeSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ExternalMapLayerURL = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LayerIsOnByDefault = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsActive = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ExternalMapLayerDescription = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static PopUpField = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MinZoom = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
